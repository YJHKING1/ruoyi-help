<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.study.mapper.TeacherMapper">
    <resultMap type="Teacher" id="TeacherResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="priority" column="priority"/>
        <result property="typeId" column="type_id"/>
        <result property="sex" column="sex"/>
    </resultMap>

    <sql id="selectTeacherVo">
        select id, name, phone, priority, type_id, sex
        from teacher
    </sql>

    <select id="selectTeacherList" parameterType="Teacher" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        <where>
            <if test="name != null  and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="phone != null  and phone != ''">
                and phone = #{phone}
            </if>
            <if test="priority != null">
                and priority = #{priority}
            </if>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
            <if test="sex != null  and sex != ''">
                and sex = #{sex}
            </if>
        </where>
    </select>

    <select id="selectTeacherById" parameterType="Long" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        where id = #{id}
    </select>

    <insert id="insertTeacher" parameterType="Teacher" useGeneratedKeys="true" keyProperty="id">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="priority != null">
                priority,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="priority != null">
                #{priority},
            </if>
            <if test="typeId != null">
                #{typeId},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
        </trim>
    </insert>

    <update id="updateTeacher" parameterType="Teacher">
        update teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="priority != null">
                priority = #{priority},
            </if>
            <if test="typeId != null">
                type_id = #{typeId},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeacherById" parameterType="Long">
        delete from teacher where id = #{id}
    </delete>

    <delete id="deleteTeacherByIds" parameterType="String">
        delete from teacher where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>