<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.study.mapper.StudentMapper">
    <sql id="Base_Column_List">
        id,
        `name`,
        sex,
        education_id,
        major,
        clazz_id,
        wechat,
        phone,
        parent_phone
    </sql>
    <resultMap type="com.ruoyi.study.domain.Student" id="StudentResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="educationId" column="education_id"/>
        <result property="major" column="major"/>
        <result property="clazzId" column="clazz_id"/>
        <result property="wechat" column="wechat"/>
        <result property="phone" column="phone"/>
        <result property="parentPhone" column="parent_phone"/>
    </resultMap>
    <resultMap type="com.ruoyi.study.domain.Student" id="StudentEducationResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="educationId" column="education_id"/>
        <result property="major" column="major"/>
        <result property="clazzId" column="clazz_id"/>
        <result property="wechat" column="wechat"/>
        <result property="phone" column="phone"/>
        <result property="parentPhone" column="parent_phone"/>
        <association property="education" javaType="com.ruoyi.study.domain.StudentEducation">
            <result property="education" column="education_name"/>
        </association>
        <association property="clazz" javaType="com.ruoyi.study.domain.Clazz">
            <result property="name" column="clazz_name"/>
        </association>
    </resultMap>

    <sql id="selectStudentVo">
        select id,
               name,
               sex,
               education_id,
               major,
               clazz_id,
               wechat,
               phone,
               parent_phone
        from student
    </sql>

    <select id="selectStudentList" parameterType="com.ruoyi.study.domain.Student" resultMap="StudentEducationResult">
        select s.*, se.education education_name, c.name clazz_name
        from student s
        join student_education se on s.education_id = se.id
        join clazz c on c.id = s.clazz_id
        <where>
            <if test="name != null  and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="sex != null  and sex != ''">
                and sex = #{sex}
            </if>
            <if test="educationId != null  and educationId != ''">
                and education_id = #{educationId}
            </if>
            <if test="major != null  and major != ''">
                and major = #{major}
            </if>
            <if test="clazzId != null">
                and clazz_id = #{clazzId}
            </if>
            <if test="wechat != null  and wechat != ''">
                and wechat = #{wechat}
            </if>
            <if test="phone != null  and phone != ''">
                and phone = #{phone}
            </if>
            <if test="parentPhone != null  and parentPhone != ''">
                and parent_phone = #{parentPhone}
            </if>
        </where>
    </select>

    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where id = #{id}
    </select>

    <insert id="insertStudent" parameterType="com.ruoyi.study.domain.Student" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="educationId != null">
                education_id,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="clazzId != null">
                clazz_id,
            </if>
            <if test="wechat != null">
                wechat,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="parentPhone != null">
                parent_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="educationId != null">
                #{educationId},
            </if>
            <if test="major != null">
                #{major},
            </if>
            <if test="clazzId != null">
                #{clazzId},
            </if>
            <if test="wechat != null">
                #{wechat},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="parentPhone != null">
                #{parentPhone},
            </if>
        </trim>
    </insert>

    <update id="updateStudent" parameterType="com.ruoyi.study.domain.Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="educationId != null">
                education_id = #{educationId},
            </if>
            <if test="major != null">
                major = #{major},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="wechat != null">
                wechat = #{wechat},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="parentPhone != null">
                parent_phone = #{parentPhone},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentById" parameterType="Long">
        delete
        from student
        where id = #{id}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete
        from student where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectByPhone" resultMap="StudentResult">
        select
        <include refid="Base_Column_List"/>
        from student
        where phone=#{phone}
    </select>
</mapper>