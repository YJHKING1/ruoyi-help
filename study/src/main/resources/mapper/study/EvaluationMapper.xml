<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.study.mapper.EvaluationMapper">
    <resultMap type="com.ruoyi.study.domain.Evaluation" id="EvaluationResult">
        <result property="id" column="id"/>
        <result property="jobId" column="job_id"/>
        <result property="evaluateText" column="evaluate_text"/>
        <result property="score" column="score"/>
        <result property="teacherId" column="teacher_id"/>
    </resultMap>
    <resultMap type="com.ruoyi.study.domain.Evaluation" id="result">
        <result property="id" column="id"/>
        <result property="jobId" column="job_id"/>
        <result property="evaluateText" column="evaluate_text"/>
        <result property="score" column="score"/>
        <result property="teacherId" column="teacher_id"/>
        <association property="teacher" javaType="com.ruoyi.study.domain.Teacher">
            <id property="id" column="tid"/>
            <result property="name" column="tname"/>
        </association>
    </resultMap>
    <resultMap type="com.ruoyi.study.domain.Evaluation" id="jobResult">
        <result property="teacherId" column="teacher_id"/>
        <result property="countNum" column="count_num"/>
        <result property="scoreAvg" column="score_avg"/>
    </resultMap>

    <sql id="selectEvaluationVo">
        select id, job_id, evaluate_text, score, teacher_id
        from evaluation
    </sql>

    <select id="selectEvaluationList" parameterType="com.ruoyi.study.domain.Evaluation" resultMap="result">
        select e.*,t.name tname,t.id tid from evaluation e join teacher t on t.id = e.teacher_id
        <where>
            <if test="jobId != null">
                and e.job_id = #{jobId}
            </if>
            <if test="evaluateText != null  and evaluateText != ''">
                and e.evaluate_text = #{evaluateText}
            </if>
            <if test="score != null  and score != ''">
                and e.score = #{score}
            </if>
            <if test="teacherId != null">
                and e.teacher_id = #{teacherId}
            </if>
        </where>
    </select>

    <select id="selectEvaluationById" parameterType="Long"
            resultMap="result">
        select e.*,t.name tname,t.id tid from evaluation e join teacher t on t.id = e.teacher_id
        where e.id = #{id}
    </select>

    <insert id="insertEvaluation" parameterType="com.ruoyi.study.domain.Evaluation" useGeneratedKeys="true"
            keyProperty="id">
        insert into evaluation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="jobId != null">
                job_id,
            </if>
            <if test="evaluateText != null">
                evaluate_text,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="jobId != null">
                #{jobId},
            </if>
            <if test="evaluateText != null">
                #{evaluateText},
            </if>
            <if test="score != null">
                #{score},
            </if>
            <if test="teacherId != null">
                #{teacherId},
            </if>
        </trim>
    </insert>

    <update id="updateEvaluation" parameterType="com.ruoyi.study.domain.Evaluation">
        update evaluation
        <trim prefix="SET" suffixOverrides=",">
            <if test="jobId != null">
                job_id =
                    #{jobId},
            </if>
            <if test="evaluateText != null">
                evaluate_text =
                    #{evaluateText},
            </if>
            <if test="score != null">
                score =
                    #{score},
            </if>
            <if test="teacherId != null">
                teacher_id =
                    #{teacherId},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEvaluationById" parameterType="Long">
        delete
        from evaluation
        where id = #{id}
    </delete>

    <delete id="deleteEvaluationByIds" parameterType="String">
        delete
        from evaluation where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectJob" resultMap="jobResult">
        select count(id) count_num, teacher_id, round(avg(score), 0) score_avg
        from evaluation
        group by teacher_id
    </select>
</mapper>